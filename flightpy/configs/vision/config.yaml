environment:
  level: ["real_tree_random_9"]
  beginning_env_folder: 0 # beginning of env
  env_folder: 0 # (no meaning...)
  world_box: [-0.3, 70, -1.5, 1.5, 0.2, 2]
  wall_pos: 1.75
  tree_size: 0.15
  y_lim: [1,10]
  z_lim: [2,10]
  # tree_size_range: [0.25, 0.5]
  goal_vel: [10.0, 0.0, 0.0]
  max_detection_range: 10.0
  goal: 60
  fly_result: false
  control_feedthrough: false
  momentum_bool: false
  momentum: 0.9
  acc_control: true
  dist_theta: [5, 15, 25, 35, 45, 55, 65, 75, 85, 95, 105, 115, 125] #[deg] size should be Theta_Cuts/2
  acc_theta: [1,4,7,10]
  # phi_list: [5, 15] #[deg] size should be Phi_Cuts/2
  max_collide_vel: 1.0
  linear_transition_log: 0.002
  vel_transition_fraction: 0.01
  vel_acc_cal_threshold: 0.3

  att_noise: 4.0 #deg
  omega_noise: 0.5 #rad/s
# three difficulty level [easy, medium, hard](list when they learn)
# configurations for dynamic and static obstacles, environment_(0~100)
# Bounding box applied during training, exiting this box terminates the episode. [xmin, xmax, ymin, ymax, zmin, zmax]
# goal velicty for tracking vx, vy, vz (desired velocity)
# max obstacle detection range [m], obstacles outside this range will not be detected. The number of obstacles detected is fixed to 10, if less than 10 obstacles are within detectable range, the observation is padded with 10.0
# goal position
rewards:
  move_coeff: 1
  move_back_coeff: 5
  vel_coeff: -0.2
  collision_coeff: -20
  vel_collision_coeff: -2.0
  vel_collision_angle_max: 25 # expressed in [deg]
  collision_exp_coeff: 1
  dist_margin: 2
  angular_vel_coeff: 0
  survive_rew: 0.03
  world_box_coeff: [0, 0] # y,z
  attitude_coeff: 0
  command_coeff: [-0.000000005, -0.000000025]
  attitude_vel_coeff: -5.0
  when_collision_coeff: -2.0
  when_wall_collision_coeff: -3.0

  names:
    [
      "move_reward",
      "lin_vel_reward",
      "collision_penalty",
      "vel_collision_penalty",
      "when_collision_penlty",
      "ang_vel_penalty",
      "survive_rew",
      "world_box_penalty",
      "attitude_penalty",
      "command_penalty",
      "attitude_vel_penalty",
      "total",
    ] #this size determines the size of rewards. (cf. vision_env.cpp l460)

rgb_camera:
  on: yes 
  t_BC: [0.0, 0.0, 0.3] # translational vector of the camera with repect to the body frame
  r_BC: [0.0, 0.0, -90] # rotational angle (roll, pitch, yaw) of the camera in degree.
  channels: 3
  width: 320 
  height: 240
  fov : 90.0
  enable_depth: yes 
  enable_segmentation: no
  enable_opticalflow: no

unity:
  scene_id: 0 # 0 warehouse, 1 street, 2 forest, 3 wasteland
  render: no 

simulation:
  seed: 1
  sim_dt: 0.025
  max_t: 60.0
  num_envs: 400
  num_threads: 20
  act_delay: 0.020 #[s]
  act_delay_width: 0.040
  obs_delay: 0.020 #[s]
  obs_delay_width: 0.075

quadrotor_dynamics:
  mass: 0.752
  tbm_fr: [0.075, -0.10, 0.0] # [m]
  tbm_bl: [-0.075, 0.10, 0.0] # [m]
  tbm_br: [-0.075, -0.10, 0.0] # [m]
  tbm_fl: [0.075, 0.10, 0.0] # [m
  omega_max: [6.0, 6.0, 2.0] #not change
  inertia: [0.0025, 0.0021, 0.0043]
  kappa: 0.022
  motor_omega_min: 150.0
  motor_omega_max: 2800.0
  motor_tau: 0.033 # not change(time delay of motor)
  thrust_map: [1.562522e-6, 0.0, 0.0] # Terms of order 2,1,0 thrustmap(motor_omega) = thrust[N]
  body_drag_1: [0.00, 0.00, 0.00]
  body_drag_3: [0.00, 0.00, 0.00]
  body_drag_h: 0.00
  quad_size: 0.25 # [m]
  quad_size_fix: false
  quad_size_threshold_dev: 0.025 # [m]
  range_time_constant: [0.2, 1.2]
  init_time_constant: 0.3
  time_constant_fix: false
  fix_time_constant: 0.3

  range_max_gain: [2.0, 10.0]
  max_gain_fix: false
  fix_max_gain: 3.0

Control:
  cmd_mode:                     2 # please check flightmare/flightlib/include/flightlib/common/command.hpp#9-13
  position_control:             true # whether need position control
  drag_compensation:            true
  kpacc:                        [10.0,  10.0, 20.0]
  kdacc:                        [ 4.0,   4.0,  6.0]
  kpatt_z:                      2
  kpatt_xy:                     10
  kprate:                       [20.0, 20.0, 40.0]
  kpeuler:                      [200.0, 200.0, 100.0]
  kdrate:                       [20.0, 20.0, 40.0]
  p_err_max:                    [0.6, 0.6, 0.3]
  v_err_max:                    [1.0, 1.0, 1.0]
  filter_sampling_frequency:     300   # filter frequency, same as control frequency (Hz)
  filter_cutoff_frequency:       6    # outer loop filter cut-off frequency (Hz)